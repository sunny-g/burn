[package]
authors = ["nathanielsimard <nathaniel.simard.42@gmail.com>"]
categories = ["science", "no-std", "embedded", "wasm"]
description = "Flexible and Comprehensive Deep Learning Framework in Rust"
edition = "2021"
keywords = ["deep-learning", "machine-learning", "tensor", "pytorch", "ndarray"]
license = "MIT OR Apache-2.0"
name = "burn-core"
readme = "README.md"
repository = "https://github.com/burn-rs/burn/tree/main/burn-core"
version = "0.9.0"

[features]
default = ["std"]
std = [
  "burn-autodiff",
  "burn-common/std",
  "burn-dataset",
  "burn-tensor/std",
  "burn-ndarray/std",
  "flate2",
  "log",
  "rand/std",
  "rmp-serde",
  "serde/std",
  "serde_json/std",
  "bincode/std",
  "half/std",
]

# Serialization formats
experimental-named-tensor = ["burn-tensor/experimental-named-tensor"]
test-tch = [] # To use tch during testing, default uses ndarray.
test-wgpu = [] # To use wgpu during testing, default uses ndarray.

[dependencies]

# ** Please make sure all dependencies support no_std when std is disabled **

burn-autodiff = {path = "../burn-autodiff", version = "0.9.0", optional = true, features = ["export_tests"]}
burn-common = {path = "../burn-common", version = "0.9.0", default-features = false}
burn-dataset = {path = "../burn-dataset", version = "0.9.0", default-features = false, optional = true}
burn-derive = {path = "../burn-derive", version = "0.9.0" }
burn-tensor = {path = "../burn-tensor", version = "0.9.0", default-features = false}

derive-new = {workspace = true}
libm = {workspace = true}
log = {workspace = true, optional = true}
rand = {workspace = true, features = ["std_rng"]}# Default enables std  
# Using in place of use std::sync::Mutex when std is disabled
spin = {workspace = true, features = ["mutex", "spin_mutex"]}#

# The same implementation of HashMap in std but with no_std support (only alloc crate is needed)
hashbrown = {workspace = true, features = ["serde"]}# no_std compatible

# Serialize Deserialize
flate2 = {workspace = true, optional = true}
serde = {workspace = true, features = ["derive"]}

bincode = {workspace = true}
half = {workspace = true}
rmp-serde = {workspace = true, optional = true}
serde_json = {workspace = true, features = ["alloc"]}#Default enables std 

[dev-dependencies]
burn-dataset = {path = "../burn-dataset", version = "0.9.0", features = [
  "fake",
]}

burn-ndarray = {path = "../burn-ndarray", version = "0.9.0", default-features = false}
burn-tch = {path = "../burn-tch", version = "0.9.0" }
burn-wgpu = {path = "../burn-wgpu", version = "0.9.0" }
